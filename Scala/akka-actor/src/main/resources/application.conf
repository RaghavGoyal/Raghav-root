//akka{
//    loglevel = "DEBUG"
//}

specialConfig{
    akka{
        loglevel = "INFO"
    }
}

interceptingLogMessages{
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
          filter-leeway = 5s
        }
      }
}

# Router Demo Config
routersDemo { # name of configuration; used while reading this block
    akka {
        actor.deployment {
            /poolMaster2 { # actor path wrt user guardian
                router = round-robin-pool # pool routing logic
                nr-of-instances = 5
            }
            /groupMaster2 {
                router = round-robin-pool
                routees.path = [
                    "/user/slave/slave-1",
                    "/user/slave/slave-2",
                    "/user/slave/slave-3",
                    "/user/slave/slave-4",
                    "/user/slave/slave-5"
                ]
            }
        }
    }
}

# Dispatcher Demo config:
# custom dispatcher:
my-dispatcher{
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor{
        # number of actors that are scheduled at a given instant of time
        fixed-pool-size = 3
    }
    # number of messages that a dispatcher can handle for one actor until that thread moves to another actor
    throughput = 30
}
dispatcherDemo{
    akka.actor.deployment{
        /someActor{ # name of actor
            dispatcher = my-dispatcher
        }
    }
}

# custom Mailbox priority:
support-ticket-dispatcher{
    mailbox-type = "Ch5.Mailboxes$SupportTicketPriorityMailbox"
}
mailboxes-demo{
    support-ticket-dispatcher{
        mailbox-type = "Ch5.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox{
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment{
        /alt-control-aware-actor{
            mailbox = control-mailbox
        }
    }
}